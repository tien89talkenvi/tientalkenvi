import streamlit as st  # streamlit=1.47.1
import pandas as pd     # pandas=2.3.1
import os, time

from selenium import webdriver  # selenium=4.34.2
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait, Select
from selenium.webdriver.support import expected_conditions as EC

import shutil
from openpyxl import Workbook, load_workbook    # openpyxl=3.1.5
from openpyxl.styles import PatternFill
from io import BytesIO
import xlsxwriter   # xlsxwriter=3.2.5
import tempfile
#from playwright.sync_api import sync_playwright    #playwright==1.54.0
#--------------------------------------------------------------
long_text1= '''
Go to SMARTS
https://smarts.waterboards.ca.gov/smarts/SwPublicUserMenu.xhtml
Click on ‚ÄúPublic User Menu‚Äù
Click on ‚ÄúDownload NOI Data By Regional Board‚Äù
Select your region from the dropdown menu
Click on both ‚ÄúIndustrial Application Specific Data‚Äù and ‚ÄúIndustrial Ad Hoc Reports - Parameter Data‚Äù
Data will be downloaded to two separate .txt files, each titled ‚Äúfile‚Äù
'''

# Cac Ham Phu --------------------------------------------------
# Ham thu viec doc file txt/cvs dung encoding nao khong gay loi
def check_read_file_txt(filetxt):
    encodings_to_try = ['utf-8', 'utf-8-sig', 'cp1252', 'cp1258', 'utf-16']

    for enc in encodings_to_try:
        try:
            df = pd.read_csv('file.txt', delimiter='\t', encoding=enc)
            print(f"‚úÖ Th√†nh c√¥ng v·ªõi encoding: {enc}")
            break
        except Exception as e:
            print(f"‚ùå {enc}: {e}")

# Ham tai file txt du lieu dang cvs cua cac mien thuoc bang Cali
@st.cache_data
def download_data_smarts(regions):
    #xoa thu muc downloads va tao lai de chi chua 2 file du lieu
    folder_path_cu = 'downloads'
    # X√≥a th∆∞ m·ª•c n·∫øu t·ªìn t·∫°i
    if os.path.exists(folder_path_cu):
        shutil.rmtree(folder_path_cu)  # X√≥a to√†n b·ªô th∆∞ m·ª•c v√† n·ªôi dung b√™n trong

    download_dir = os.path.abspath("downloads")
    os.makedirs(download_dir, exist_ok=True)

    # ‚úÖ C·∫§U H√åNH CHROME:
    options = webdriver.ChromeOptions()
    prefs = {
        "download.default_directory": download_dir,
        "download.prompt_for_download": False,
        "download.directory_upgrade": True,
        "safebrowsing.enabled": True,
        "profile.default_content_setting_values.automatic_downloads": 1   # D√íNG QUAN TR·ªåNG DE TAT THONG BAO
    }
    options.add_experimental_option("prefs", prefs)
    options.add_argument("--headless")  # ch·∫°y ·∫©n tr√¨nh duy·ªát

    # ‚úÖ KH·ªûI T·∫†O TR√åNH DUY·ªÜT
    driver = webdriver.Chrome(options=options)

    driver.get("https://smarts.waterboards.ca.gov/smarts/SwPublicUserMenu.xhtml")
    print("‚úÖ V√†o trang ch√≠nh")

    WebDriverWait(driver, 15).until(
        EC.element_to_be_clickable((By.LINK_TEXT, "Download NOI Data By Regional Board"))
    ).click()

    WebDriverWait(driver, 10).until(lambda d: len(d.window_handles) > 1)
    driver.switch_to.window(driver.window_handles[-1])
    print("‚úÖ ƒê√£ chuy·ªÉn sang tab m·ªõi")

    links = [
        "Industrial Application Specific Data",
        "Industrial Ad Hoc Reports - Parameter Data"
    ]

    def wait_for_download_and_get_new_file(before_files, timeout=40):
        for _ in range(timeout * 2):
            time.sleep(0.5)
            after_files = set(os.listdir(download_dir))
            new_files = after_files - before_files
            txt_files = [f for f in new_files if f.endswith(".txt")]
            if txt_files:
                return txt_files[0]
        return None
    #---------------------
    region = regions
    print(f"\nüîπ Ch·ªçn Region: {region}")
    dropdown = WebDriverWait(driver, 15).until(
        EC.presence_of_element_located((By.NAME, "intDataFileDowloaddataFileForm:intDataDumpSelectOne"))
    )
    Select(dropdown).select_by_visible_text(region)
    time.sleep(3)  # ƒê·ª£i dropdown load l·∫°i
    
    lfile_datai = []

    for j, name in enumerate(links):
        try:
            print(f"üì• ƒêang click t·∫£i: {name}")
            before = set(os.listdir(download_dir))

            link_elem = WebDriverWait(driver, 15).until(
                EC.element_to_be_clickable((By.LINK_TEXT, name))
            )
            driver.execute_script("arguments[0].click();", link_elem)

            fname = wait_for_download_and_get_new_file(before)
            if fname:
                # T·∫°o t√™n file chu·∫©n theo Region + t√™n file
                src = os.path.join(download_dir, fname)
                dst_name = f"{region} - {name}.txt"
                dst_name = dst_name.replace(" ", "_")  # N·∫øu mu·ªën
                dst = os.path.join(download_dir, dst_name)
                os.rename(src, dst)
                print(f"File ƒë√£ l∆∞u: {dst}")
                lfile_datai.append(f"{dst}")
            else:
                print("‚ùå Kh√¥ng t√¨m th·∫•y file m·ªõi sau khi t·∫£i")
        except Exception as e:
            print(f"‚ùå L·ªói khi t·∫£i {name} ·ªü Region {region}: {e}")

    driver.quit()
    print("\nüéâ Ho√†n t·∫•t t·∫£i file cho "+region)
    return lfile_datai
    # CHU Y rang neu ten file dat trung voi file da co thi that bai.
# CAC HAM CHINH-----------------------------------------------------
def ThucThiPhan_4():
    return    


@st.cache_data
def Doc_hthi_data(uploaded_file):
    try:
        # ƒê·ªçc file Excel th√†nh DataFrame
        df = pd.read_excel(uploaded_file, sheet_name='Data')

        # 1. S·∫Øp x·∫øp d·ªØ li·ªáu theo nhi·ªÅu c·∫•p ƒë·ªô (multi-level sort):
        df_sorted = df.sort_values(
                by=["OLD/NEW", "PARAMETER", "RESULT"],
                ascending=[True, True, False]
        )
        # 2. L·ªçc d·ªØ li·ªáu c√≥ OLD/NEW == 'New':
        df_new = df_sorted[df_sorted["OLD/NEW"] == "New"]
        # 3. T√¥ m√†u (highlight) exceedances th√¨ kh√¥ng th·ªÉ hi·ªÉn th·ªã trong DataFrame th√¥ng th∆∞·ªùng nh∆∞ng c√≥ th·ªÉ d√πng:
        # pandas.ExcelWriter + openpyxl ƒë·ªÉ ghi file Excel c√≥ m√†u.
        # Ho·∫∑c ƒë∆°n gi·∫£n ch·ªâ ƒë√°nh d·∫•u b·∫±ng c·ªôt m·ªõi "Exceed" = True/False
        # 4. So s√°nh k·∫øt qu·∫£ v·ªõi ng∆∞·ª°ng NAL/NEL/TNAL:
        # tao dic chua nguong
        nal_thresholds = {
            "Ammonia": 4.7,
            "Cadmium": 0.0031,
            "Copper": 0.06749,
            # v.v...
        }
        # R·ªìi ki·ªÉm tra:
        def is_exceed(row):
            param = row["PARAMETER"]
            result = row["RESULT"]
            return result > nal_thresholds.get(param, float('inf'))
        
        df_new["EXCEED"] = df_new.apply(is_exceed, axis=1)
        # 5. Ghi ch√∫ c√°c facility c·∫ßn theo d√µi ‚Üí b·∫°n c√≥ th·ªÉ l·ªçc ho·∫∑c th√™m c·ªôt "Flagged" d·ª±a v√†o danh s√°ch th·ªß c√¥ng.


        st.success(f"ƒê√£ t·∫£i l√™n: {uploaded_file.name}")
        st.subheader("üìÑ D·ªØ li·ªáu t·ª´ file:")

        # B∆∞·ªõc 3: Hi·ªÉn th·ªã DataFrame v·ªõi cu·ªôn d·ªçc (gi·∫£ l·∫≠p 3 d√≤ng)
        st.dataframe(df) #, height=120, use_container_width=True)

    except Exception as e:
        st.error(f"L·ªói khi ƒë·ªçc file: {e}")
    
def Ht_CaiMuonXem_0(tepxlsx):
    # 1.ƒê·ªçc file Excel th√†nh DataFrame
    df = pd.read_excel(tepxlsx, sheet_name='Data')
    # 2. S·∫Øp x·∫øp d·ªØ li·ªáu theo nhi·ªÅu c·∫•p ƒë·ªô (multi-level sort):
    df_sorted = df.sort_values(
        by=["OLD/NEW", "PARAMETER", "RESULT"],
        ascending=[True, True, False]
    )
    #Dua vao xlsx de xem kq sx
    tepxlsxdexem = "Data_Tracker_3-1.xlsx"
    df_sorted.to_excel(tepxlsxdexem, sheet_name='Datanew', index=False)
    os.startfile(tepxlsxdexem)

#---------------------------------
def Ht_CaiMuonXem_1(uploaded_file):
    uploaded_file = st.file_uploader("T·∫£i l√™n Data_Tracker_New.xlsx", type=["xlsx"])
    if uploaded_file:
        df = pd.read_excel(uploaded_file)
        # Ghi t·∫°m ra file Excel ƒë·ªÉ x·ª≠ l√Ω openpyxl
        output = BytesIO()
        df.to_excel(output, index=False)
        output.seek(0)

        # Load v√† t√¥ m√†u
        wb = load_workbook(output)
        ws = wb.active

        # T√¨m v·ªã tr√≠ c√°c c·ªôt "OLD/NEW" v√† "COSO"
        header = [cell.value for cell in ws[1]]

        try:
            old_new_col_idx = header.index("OLD/NEW") + 1
            coso_col_idx = header.index("FACILITY_NAME") + 1
        except ValueError as e:
            raise Exception(f"Kh√¥ng t√¨m th·∫•y c·ªôt: {e}")

        # T√¥ m√†u v√†ng cho d√≤ng 'new' thu·ªôc c∆° s·ªü 'CS1'
        yellow_fill = PatternFill(start_color="FFFF00", end_color="FFFF00", fill_type="solid")

        # Duy·ªát t·ª´ng d√≤ng
        for row in ws.iter_rows(min_row=2, max_row=ws.max_row):
            old_new_val = str(row[old_new_col_idx - 1].value).strip().lower() if row[old_new_col_idx - 1].value else ""
            coso_val = str(row[coso_col_idx - 1].value).strip() if row[coso_col_idx - 1].value else ""

            if old_new_val == "old" and coso_val == 'CS1':
                for cell in row:
                    cell.fill = yellow_fill
                # D√≤ng n√†y ƒë∆∞·ª£c gi·ªØ l·∫°i
            else:
                # ·∫®n d√≤ng kh√¥ng kh·ªõp ƒëi·ªÅu ki·ªán
                ws.row_dimensions[row[0].row].hidden = True

        # L∆∞u file m·ªõi
        wb.save("filtered_CS1_new.xlsx")
        os.startfile("filtered_CS1_new.xlsx")

        # L∆∞u l·∫°i v√† cho ph√©p t·∫£i xu·ªëng
        #final_output = BytesIO()
        #wb.save(final_output)
        #final_output.seek(0)

        #st.download_button("üì• T·∫£i file ƒë√£ t√¥ m√†u", final_output, "T_to_mau.xlsx")

def ThucThiPhan_3():
    # B∆∞·ªõc 1: Upload fle Data_Tracker_New.xlsx
    uploaded_file = st.file_uploader('Upload Data_Tracker_New.xlsx',type=['xlsx'])
    # B∆∞·ªõc 2: N·∫øu c√≥ file, test chon header, sau nay b√≤
    if uploaded_file is not None and "Data_Tracker_New" in uploaded_file.name :
        df = pd.read_excel(uploaded_file, nrows=0)
        headers = df.columns.tolist()
        headers = st.multiselect("Choose headers",  headers,)
        if headers:
            # in header cuoi vua chon
            st.write(headers[-1])

    # B∆∞·ªõc 3 : chay ham chon trong menu
    # list cac viec va  ham
    op_listCaiMuonXem = {
        "C·ªôt OLD/NEW c√≥ gi√° tr·ªã new": Ht_CaiMuonXem_0,
        "C·ªôt OLD/NEW c√≥ gi√° tr·ªã old": Ht_CaiMuonXem_1
    }
    # menu chon ham/viec
    viec_chon = st.selectbox(
        "Chon cai ban muon xem", 
        (op_listCaiMuonXem.keys()),
        index=None,
        placeholder="Chon hien thi...",
    )
    # chay ham da chon
    if viec_chon:
        # chay ham tuong ung voi key chon_with_viec, ham nay co ten la gia tri cua key do, 
        # them () de chay ham, tham so la file excel da tai len
        op_listCaiMuonXem[viec_chon](uploaded_file)   # üëâ G·ªçi h√†m tuong ung
        st.write("Xong phan 3")

# ---- phuc vu cho ThucThiPhan_2()------------------
@st.cache_data
def Combined_to_data_tracker(uploaded_tracker):
    try:
        # Read input files
        sheet1 = pd.read_excel(uploaded_tracker, sheet_name='Sheet1', header=None, dtype=str)
        sheet2 = pd.read_excel(uploaded_tracker, sheet_name='Sheet2', dtype=str)
        df_tracker = pd.read_excel(uploaded_tracker, sheet_name='Data', dtype=str)

        # Clean Sheet1
        cols_to_delete = list(range(15, 28)) + list(range(31, 38)) + [0, 4, 5, 6, 7, 11]
        # Ch·ªâ l·∫•y c√°c ch·ªâ s·ªë c·ªôt c·∫ßn x√≥a, nh∆∞ng ph·∫£i nh·ªè h∆°n num_cols
        num_cols = sheet1.shape[1]
        cols_to_delete = [col for col in cols_to_delete if col < num_cols]
        sheet1_cleaned = sheet1.drop(sheet1.columns[cols_to_delete], axis=1)

        sheet1_cleaned.columns = sheet1_cleaned.iloc[0]
        sheet1_cleaned = sheet1_cleaned[1:]

        # Reorder columns
        cols = list(sheet1_cleaned.columns)
        if 'WDID' in cols and 'APP_ID' in cols:
            cols.remove('WDID')
            cols.insert(cols.index('APP_ID'), 'WDID')
        if 'FACILITY_NAME' in cols and 'OPERATOR_NAME' in cols:
            cols.remove('FACILITY_NAME')
            cols.insert(cols.index('OPERATOR_NAME'), 'FACILITY_NAME')
        sheet1_cleaned = sheet1_cleaned[cols]


        # Clean Sheet2 and merge SIC data
        sheet2_cleaned = sheet2.drop(sheet2.columns[2:8], axis=1)
        sheet2_cleaned = sheet2_cleaned.iloc[:, :5]  # Ch·ªâ l·∫•y 5 c·ªôt ƒë·∫ßu ti√™n
        sheet2_cleaned.columns = ['A', 'APP_ID', 'PRIMARY_SIC', 'SECONDARY_SIC', 'TERTIARY_SIC']
        sheet2_cleaned = sheet2_cleaned[['APP_ID', 'PRIMARY_SIC', 'SECONDARY_SIC', 'TERTIARY_SIC']]
        merged = pd.merge(sheet1_cleaned, sheet2_cleaned, on='APP_ID', how='left')
        merged = merged.rename(columns={'PRIMARY_SIC': '1', 'SECONDARY_SIC': '2', 'TERTIARY_SIC': '3'})
        merged['2'] = merged['2'].replace('0', pd.NA)
        merged['3'] = merged['3'].replace('0', pd.NA)
        merged['OLD/NEW'] = 'new'

        # Add "Old" tag to tracker and combine
        df_tracker['OLD/NEW'] = 'old'
        df_combined = pd.concat([df_tracker, merged], ignore_index=True)

        # Export to Excel in-memory
        output = BytesIO()
        with pd.ExcelWriter(output, engine='openpyxl') as writer:
            df_combined.to_excel(writer, sheet_name='Data', index=False)
        output.seek(0)
        return output 
    except Exception as e:
        st.error(f"‚ö†Ô∏è An error occurred: {e}")


@st.cache_data
def Txt_to_data_tracker(df1, df2, df_data):
    output = BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        df1.to_excel(writer, sheet_name="Sheet1", index=False)
        df2.to_excel(writer, sheet_name="Sheet2", index=False)
        df_data.to_excel(writer, sheet_name="Data", index=False)
    output.seek(0)
    return output
     



# -----------------
def ThucThiPhan_2():    
    uploaded_files = st.file_uploader(
        'Upload your files',
        type=['txt', 'xlsx'],  
        accept_multiple_files=True
    )
    if uploaded_files and len(uploaded_files) == 3:
        # Ph√¢n lo·∫°i file theo ƒëu√¥i v√† t√™n
        uploaded_f1 = next((f for f in uploaded_files if "industrial_ad_hoc" in f.name.lower()), None)
        uploaded_f3 = next((f for f in uploaded_files if f.name.lower().endswith(".xlsx")), None)
        # f2 l√† file .txt c√≤n l·∫°i (kh√¥ng ph·∫£i f1)
        uploaded_f2 = next((f for f in uploaded_files if f != uploaded_f1 and f.name.lower().endswith(".txt")), None)

        if uploaded_f1 and uploaded_f2 and uploaded_f3:
            try:
                df1 = pd.read_csv(uploaded_f1, sep='\t', encoding='cp1252')
                df2 = pd.read_csv(uploaded_f2, sep='\t', encoding='cp1252')
                df_data = pd.read_excel(uploaded_f3, sheet_name="Data")  # Ch·ªâ ƒë·ªçc sheet "Data"
            except Exception as e:
                st.error(f"‚ö†Ô∏è L·ªói khi ƒë·ªçc file: {e}")
                st.stop()
            # Dua 2 txt vao excel Data_Tracker.xlsx tu 3 file tai len
            # va tra ve file ao data_tracker_upload da chua them 2 txt   
            data_tracker_upload = Txt_to_data_tracker(df1, df2,df_data)

            # Xu li 2 sheet txt tren data_tracker_upload append vao Data sheet
            # va tra ve tep  Data_Tracker_New de download
            Data_Tracker_New = Combined_to_data_tracker(data_tracker_upload)    

            st.success("‚úÖ ƒê√£ t·∫°o Data_Tracker_New.xlsx tu 3 file tai len.")
            st.download_button(
                label="üì• T·∫£i xu·ªëng file Excel m·ªõi: Data_Tracker_New.xlsx",
                data=Data_Tracker_New,
                file_name="Data_Tracker_New.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )
        else:
            st.warning('H√£y ƒë·∫£m b·∫£o ƒë√∫ng file "...Industrial_Application...txt", file "...Industrial_ad_hoc...txt", v√† file "Data_tracker.xlsx" ')
    else:
        st.info('Vui l√≤ng upload ƒë·ªß 3 file: "...Industrial_Application...txt", "...Industrial_Ad_Hoc...txt", v√† "Data_tracker.xlsx" ')
    return

#-------------------
def ThucThiPhan_1():
    # cac vung de chon
    regions = st.selectbox("Select a Region:", 
                ("Region 1 - North Coast",
                "Region 2 - San Francisco Bay",
                "Region 3 - Central Coast",
                "Region 4 - Los Angeles",
                "Region 5F - Fresno",
                "Region 5R - Redding",
                "Region 5S - Sacramento",
                "Region 6A - South Lake Tahoe",
                "Region 6B - Victorville",
                "Region 7 - Colorado River Basin",
                "Region 8 - Santa Ana",
                "Region 9 - San Diego"),
                index=None,
                placeholder="No selected Region",
                )
    #neu mot vung duoc chon thi lam
    LOI='OK'
    if regions:
        placeholder_1 = st.empty()
        placeholder_1.write('Wait for downloading 2 files of ' + regions)
        #thuc thi ham download_data_smarts(regions) va tra ve list cac file da tai 
        try :
            lfile_datai = download_data_smarts(regions)
            placeholder_1.write('Downloaded files:')
            st.write(lfile_datai)
        except:
            LOI='LOI'
            placeholder_1.write('Tai file kh√¥ng ƒë·∫°t!')
    if LOI == 'LOI':
        st.write('N·∫øu kh√¥ng ƒë·∫°t, m·ªü tr·ª±c ti·∫øp trang sau l√†m theo c√°c b∆∞·ªõc ƒë·ªÉ t·∫£i:')
        st.markdown("1-[Open Page SMARTS](https://smarts.waterboards.ca.gov/smarts/SwPublicUserMenu.xhtml)", unsafe_allow_html=True)
        st.write('2-Click on ‚ÄúDownload NOI Data By Regional Board‚Äù')
        st.write('3-Select your region from the dropdown menu')
        st.write('4-Click on both ‚ÄúIndustrial Application Specific Data‚Äù and ‚ÄúIndustrial Ad Hoc Reports - Parameter Data‚Äù')
        st.write('5-Data will be downloaded to two separate .txt files, each titled ‚Äúfile‚Äù')
        st.write('6-N√™n ƒë·ªïi t√™n 2 file th√†nh Industrial_Application_Specific_Data v√† Industrial_Ad_Hoc_Reports_-_Parameter_Data r·ªìi ch√©p v√†o th∆∞ m·ª•c ri√™ng c·ªßa b·∫°n ƒë·ªÉ d·ªÖ l√†m vi·ªác ·ªü c√°c b∆∞·ªõc sau.')

def vote(item):
    st.write(f"Why is {item} your favorite?")
    reason = st.text_input("Because...")

#========================= MAIN =====================================================================
with st.sidebar:
    st.header('L·∫≠p tr√¨nh theo t√†i li·ªáu n√†y:')
    # ƒê·ªçc n·ªôi dung file Markdown
    with open("hd-lam-app-cho-thong.md", "r", encoding="utf-8") as f:
        md_content = f.read()
    st.markdown(md_content, unsafe_allow_html=True)
    #    with st.popover("Ph·∫ßn I: Download the data"):
    #scrolling_box = (f"""
    #            <div style='overflow-y: auto; height: 300px; 
    #            border: 1px solid lightgray; padding: 10px'>{md_content}</div>
    #            """)
    #popover.markdown(scrolling_box, unsafe_allow_html=True)

# TIEU DE APP
st.header('üè∑Ô∏èTr√¨nh h·ªó tr·ª£ qu·∫£n l√Ω m√¥i tr∆∞·ªùng n∆∞·ªõc')

# PHAN 1: TAI FILES TXT DU LIEU DAT VAO EXCEL
#--------------------------------------------
st.subheader('‚úÖ I. Download the data', divider=True)
ThucThiPhan_1()

# Them data moi vao trinh theo doi
#---------------------------------
st.subheader('‚úÖ II. Add the new data to your tracker', divider=True)
ThucThiPhan_2()

long_text= '''
A.
Go to SMARTS
https://smarts.waterboards.ca.gov/smarts/SwPublicUserMenu.xhtml

B.
ƒê∆∞a Sheet2 v·ªÅ ƒë·ªãnh d·∫°ng ph√π h·ª£p v·ªõi tr√¨nh theo d√µi c·ªßa b·∫°n
Sao ch√©p (CTRL+C) v√† d√°n (CTRL+V) to√†n b·ªô t·ªáp vƒÉn b·∫£n "D·ªØ li·ªáu ·ª®ng d·ª•ng C√¥ng nghi·ªáp C·ª• th·ªÉ" v√†o √¥ ƒë·∫ßu ti√™n trong Sheet2 (A1).
Nh·∫•p v√†o H√†ng 1 (h√†ng ti√™u ƒë·ªÅ), chuy·ªÉn ƒë·∫øn tab "D·ªØ li·ªáu" trong Excel v√† nh·∫•p v√†o n√∫t "L·ªçc".
Nh·∫•p v√†o C·ªôt B (c·ªôt ID ·ª®ng d·ª•ng), chuy·ªÉn ƒë·∫øn tab "Trang ch·ªß" trong Excel v√† t·ª´ n√∫t "ƒê·ªãnh d·∫°ng ƒêi·ªÅu ki·ªán", nh·∫•p v√†o "ƒê√°nh d·∫•u Quy t·∫Øc √î" r·ªìi ch·ªçn "Gi√° tr·ªã Tr√πng l·∫∑p" t·ª´ menu th·∫£ xu·ªëng hi·ªán ra. Nh·∫•n "OK" tr√™n h·ªôp vƒÉn b·∫£n hi·ªán ra.
ƒêi ƒë·∫øn menu th·∫£ xu·ªëng c·ªßa C·ªôt B v√† nh·∫•p v√†o "L·ªçc theo m√†u", sau ƒë√≥ ch·ªçn h·ªôp m√†u. Thao t√°c n√†y s·∫Ω ch·ªâ hi·ªÉn th·ªã c√°c h√†ng tr√πng l·∫∑p.
Nh·∫•p v√†o menu th·∫£ xu·ªëng c·ªßa C·ªôt D (c·ªôt tr·∫°ng th√°i) v√† b·ªè ch·ªçn "ƒêang ho·∫°t ƒë·ªông" ƒë·ªÉ ch·ªâ hi·ªÉn th·ªã c√°c h√†ng c√≥ tr·∫°ng th√°i kh√°c "ƒêang ho·∫°t ƒë·ªông".
X√≥a t·∫•t c·∫£ c√°c h√†ng ƒëang hi·ªÉn th·ªã.
Trong tab "D·ªØ li·ªáu" trong Excel, nh·∫•n "X√≥a" ƒë·ªÉ xem c√°c h√†ng c√≤n l·∫°i.
S·∫Øp x·∫øp l·∫°i c√°c c·ªôt v√† x√≥a c√°c c·ªôt th·ª´a cho ph√π h·ª£p v·ªõi tr√¨nh theo d√µi c·ªßa b·∫°n.
X√≥a c√°c c·ªôt t·ª´ AF (T√™n ngu·ªìn n∆∞·ªõc ti·∫øp nh·∫≠n) ƒë·∫øn AL (c·ªôt ngo√†i c√πng b√™n ph·∫£i c√≥ vƒÉn b·∫£n)
X√≥a c√°c c·ªôt t·ª´ P (Vƒ© ƒë·ªô c∆° s·ªü) ƒë·∫øn AB (T·ª∑ l·ªá ph·∫ßn trƒÉm kh√¥ng th·∫•m n∆∞·ªõc c·ªßa v·ªã tr√≠)
X√≥a ƒë·ªìng th·ªùi c√°c c·ªôt A, E-H v√† L.
Di chuy·ªÉn c·ªôt B (WDID) sang tr√°i C·ªôt A (ID ·ª©ng d·ª•ng). Di chuy·ªÉn c·ªôt E (T√™n c∆° s·ªü) sang tr√°i C·ªôt D (T√™n ng∆∞·ªùi v·∫≠n h√†nh).
Sau khi s·∫Øp x·∫øp l·∫°i, c√°c c·ªôt trong Sheet2 s·∫Ω tr√¥ng nh∆∞ sau: A ‚Äì WDID; B ‚Äì ID ·ª©ng d·ª•ng; C ‚Äì Tr·∫°ng th√°i; D ‚Äì T√™n c∆° s·ªü; E ‚Äì T√™n ng∆∞·ªùi v·∫≠n h√†nh; F ‚Äì ƒê·ªãa ch·ªâ; G ‚Äì Th√†nh ph·ªë; H ‚Äì Ti·ªÉu bang; I ‚Äì M√£ b∆∞u ch√≠nh; J ‚Äì SIC ch√≠nh; K ‚Äì SIC ph·ª•; L ‚Äì SIC th·ª© ba

C.
ƒê∆∞a Sheet1 v·ªÅ ƒë·ªãnh d·∫°ng ph√π h·ª£p v·ªõi tr√¨nh theo d√µi c·ªßa b·∫°n
Sao ch√©p (CTRL+C) v√† d√°n (CTRL+V) to√†n b·ªô t·ªáp vƒÉn b·∫£n "B√°o c√°o Ad Hoc C√¥ng nghi·ªáp - D·ªØ li·ªáu Tham s·ªë" v√†o √¥ ƒë·∫ßu ti√™n trong Sheet1 (A1).
V√†o tab "D·ªØ li·ªáu" trong Excel, nh·∫•p v√†o n√∫t "X√≥a Tr√πng l·∫∑p" v√† nh·∫•n "OK" tr√™n h·ªôp tho·∫°i hi·ªán ra.
Trong c·ªôt B (WDID), h√£y l·ªçc c√°c k·∫øt qu·∫£ hi·ªÉn th·ªã "4 56" (l∆∞u √Ω kho·∫£ng c√°ch gi·ªØa 4 v√† 56), sau ƒë√≥ x√≥a t·∫•t c·∫£ c√°c h√†ng hi·ªÉn th·ªã. "4 56" l√† m√£ qu·∫≠n c·ªßa WDID ƒë·ªëi v·ªõi qu·∫≠n Ventura, do ƒë√≥ ch√∫ng t√¥i s·∫Ω kh√¥ng nh·∫Øm m·ª•c ti√™u ƒë·∫øn b·∫•t k·ª≥ c∆° s·ªü n√†o trong s·ªë ƒë√≥.
Trong tab "D·ªØ li·ªáu" trong Excel, nh·∫•n "X√≥a" ƒë·ªÉ xem c√°c h√†ng c√≤n l·∫°i.
X√≥a t·∫•t c·∫£ c√°c c·ªôt kh√¥ng c√≥ trong tr√¨nh theo d√µi c·ªßa b·∫°n (c√°c c·ªôt A, J, K, U, X v√† Y).
Sau khi x√≥a c√°c c·ªôt n√†y, c√°c c·ªôt Sheet1 s·∫Ω tr√¥ng nh∆∞ sau: A ‚Äì WDID; B ‚Äì App ID; C ‚Äì Tr·∫°ng th√°i; D ‚Äì T√™n c∆° s·ªü; E ‚Äì T√™n nh√† ƒëi·ªÅu h√†nh; F ‚Äì ƒê·ªãa ch·ªâ; G ‚Äì Th√†nh ph·ªë; H ‚Äì Ti·ªÉu bang; I ‚Äì M√£ b∆∞u ch√≠nh; J ‚Äì SIC ch√≠nh; K ‚Äì SIC ph·ª•; L ‚Äì SIC b·∫≠c ba

D.
Filter Sheet1 ch·ªâ d√†nh cho d·ªØ li·ªáu m·∫´u m·ªõi
Nh·∫•p chu·ªôt ph·∫£i v√†o C·ªôt B (M√£ ·ª©ng d·ª•ng) v√† nh·∫•n "insert", thao t√°c n√†y s·∫Ω ch√®n m·ªôt c·ªôt tr·ªëng sang b√™n tr√°i.
Trong √¥ tr·ªëng ƒë·∫ßu ti√™n (B2), h√£y nh·∫≠p c√¥ng th·ª©c sau r·ªìi nh·∫•n enter: =VLOOKUP(J2,Data!O:P,2,FALSE)
N·∫øu b·∫°n di chuy·ªÉn chu·ªôt ƒë·∫øn g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ B2, b·∫°n s·∫Ω th·∫•y con tr·ªè d·∫•u c·ªông m√†u tr·∫Øng chuy·ªÉn th√†nh d·∫•u c·ªông m√†u ƒëen m·ªèng. Khi ƒë√≥, h√£y nh·∫•p ƒë√∫p chu·ªôt v√† Excel s·∫Ω ƒëi·ªÅn c√¥ng th·ª©c cho ph·∫ßn c√≤n l·∫°i c·ªßa c·ªôt.
Sau ƒë√≥, nh·∫•p v√†o c·ªôt, nh·∫•n CTRL+C ƒë·ªÉ sao ch√©p, r·ªìi nh·∫•p chu·ªôt ph·∫£i v√† trong m·ª•c "t√πy ch·ªçn d√°n", h√£y nh·∫•p v√†o bi·ªÉu t∆∞·ª£ng c√≥ ch·ªØ "123" nh·ªè ·ªü g√≥c, thao t√°c n√†y s·∫Ω ch·ªâ d√°n k·∫øt qu·∫£ thay v√¨ c√¥ng th·ª©c.
S·∫Øp x·∫øp c·ªôt B t·ª´ nh·ªè ƒë·∫øn l·ªõn, sau ƒë√≥ t·ª´ danh s√°ch th·∫£ xu·ªëng c·ªßa C·ªôt B hi·ªÉn th·ªã t·∫•t c·∫£ c√°c s·ªë, cu·ªôn xu·ªëng cu·ªëi trang v√† b·ªè ch·ªçn "Kh√¥ng √°p d·ª•ng". Thao t√°c n√†y s·∫Ω ch·ªâ hi·ªÉn th·ªã c√°c √¥ c√≥ s·ªë.
X√≥a t·∫•t c·∫£ c√°c h√†ng ƒëang hi·ªÉn th·ªã.
Trong tab ‚ÄúD·ªØ li·ªáu‚Äù trong Excel, nh·∫•n ‚ÄúX√≥a‚Äù ƒë·ªÉ xem c√°c h√†ng c√≤n l·∫°i.

E.
Ki·ªÉm tra xem c√°c ti·ªán √≠ch trong Sheet1 c√≥ ƒëang ho·∫°t ƒë·ªông kh√¥ng.
Trong √¥ B2 c·ªßa Sheet1, x√≥a "N/A" v√† nh·∫≠p c√¥ng th·ª©c sau, r·ªìi nh·∫•n Enter: =VLOOKUP(C2,Sheet2!B:D,2,FALSE)
N·∫øu b·∫°n di chuy·ªÉn chu·ªôt ƒë·∫øn g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ B2, b·∫°n s·∫Ω th·∫•y con tr·ªè d·∫•u c·ªông m√†u tr·∫Øng chuy·ªÉn th√†nh d·∫•u c·ªông m√†u ƒëen m·ªèng. Khi ƒë√≥, h√£y nh·∫•p ƒë√∫p chu·ªôt v√† Excel s·∫Ω ƒëi·ªÅn c√¥ng th·ª©c cho ph·∫ßn c√≤n l·∫°i c·ªßa c·ªôt.
Sau ƒë√≥, nh·∫•p v√†o c·ªôt, nh·∫•n CTRL+C ƒë·ªÉ sao ch√©p, r·ªìi nh·∫•p chu·ªôt ph·∫£i v√† trong m·ª•c "t√πy ch·ªçn d√°n", nh·∫•p v√†o bi·ªÉu t∆∞·ª£ng c√≥ ch·ªØ "123" nh·ªè ·ªü g√≥c, bi·ªÉu t∆∞·ª£ng n√†y s·∫Ω ch·ªâ d√°n k·∫øt qu·∫£ thay v√¨ c√¥ng th·ª©c.
S·∫Øp x·∫øp c·ªôt B theo th·ª© t·ª± t·ª´ A ƒë·∫øn Z, sau ƒë√≥ t·ª´ danh s√°ch th·∫£ xu·ªëng c·ªßa C·ªôt B hi·ªÉn th·ªã c√°c t√πy ch·ªçn tr·∫°ng th√°i, b·ªè ch·ªçn "ƒëang ho·∫°t ƒë·ªông". Thao t√°c n√†y s·∫Ω ch·ªâ hi·ªÉn th·ªã c√°c √¥ l√† ti·ªán √≠ch kh√¥ng ho·∫°t ƒë·ªông.
X√≥a t·∫•t c·∫£ c√°c h√†ng ƒëang hi·ªÉn th·ªã.
Trong tab "D·ªØ li·ªáu" trong Excel, nh·∫•n "X√≥a" ƒë·ªÉ xem c√°c h√†ng c√≤n l·∫°i.

F.
Ch·ªçn c√°c th√¥ng s·ªë c·∫ßn theo d√µi trong Sheet1
Trong Sheet1, x√≥a C·ªôt B.
Nh·∫•p chu·ªôt ph·∫£i v√†o c·ªôt N (c·ªôt th√¥ng s·ªë) v√† nh·∫•n Insert, thao t√°c n√†y s·∫Ω ch√®n m·ªôt c·ªôt tr·ªëng b√™n tr√°i c·ªôt N.
T·ª´ menu th·∫£ xu·ªëng c·ªßa c·ªôt th√¥ng s·ªë (b√¢y gi·ªù s·∫Ω l√† c·ªôt O), h√£y nh·∫•p v√†o h·ªôp ki·ªÉm b√™n c·∫°nh "(Select All") ƒë·ªÉ b·ªè ch·ªçn t·∫•t c·∫£ c√°c th√¥ng s·ªë. Sau ƒë√≥, h√£y xem qua v√† ƒë√°nh d·∫•u v√†o t·ª´ng th√¥ng s·ªë b·∫°n mu·ªën c√≥ trong tr√¨nh theo d√µi, r·ªìi nh·∫•n "OK".
C√°c th√¥ng s·ªë m√† LAW ƒë√£ theo d√µi cho ƒë·∫øn nay nh∆∞ sau (c√≥ th·ªÉ b·ªï sung th√™m th√¥ng s·ªë t√πy theo nhu c·∫ßu c·ª• th·ªÉ c·ªßa t·ª´ng c∆° s·ªü): Nh√¥m; Amoniac; Asen; Nhu c·∫ßu oxy sinh h√≥a (BOD); Cadimi; Nhu c·∫ßu oxy h√≥a h·ªçc (COD); ƒê·ªìng; Xyanua; E. coli; Enterococci MPN; Coliform ph√¢n; S·∫Øt; Ch√¨; Magi√™; Th·ªßy ng√¢n; Niken; Nitrat; Nitrit; Nitrit c·ªông Nitrat (N+N); D·∫ßu m·ª° (O&G); pH; Ph·ªët pho; Selen; B·∫°c; T·ªïng Coliform; T·ªïng ch·∫•t r·∫Øn l∆° l·ª≠ng (TSS); K·∫Ωm
Trong √¥ tr·ªëng ƒë·∫ßu ti√™n c·ªßa c·ªôt N (c·ªôt tr·ªëng ƒë∆∞·ª£c ch√®n b√™n tr√°i c·ªôt tham s·ªë), h√£y vi·∫øt t·ª´ "keep", nh·∫•p v√†o √¥, sau ƒë√≥ ƒëi·ªÅn t·ª´ ƒë√≥ v√†o t·∫•t c·∫£ c√°c √¥ kh√°c hi·ªÉn th·ªã b·∫±ng c√°ch nh·∫•p ƒë√∫p v√†o g√≥c d∆∞·ªõi b√™n ph·∫£i khi b·∫°n th·∫•y d·∫•u c·ªông m√†u ƒëen m·ªèng.
Trong tab "D·ªØ li·ªáu" trong Excel, nh·∫•n "X√≥a" ƒë·ªÉ xem c√°c h√†ng c√≤n l·∫°i.
S·∫Øp x·∫øp c·ªôt N (c·ªôt c√≥ t·ª´ "keep") theo th·ª© t·ª± t·ª´ A ƒë·∫øn Z v√† b·ªè ch·ªçn "keep" trong danh s√°ch th·∫£ xu·ªëng ƒë·ªÉ ch·ªâ c√≤n l·∫°i c√°c h√†ng kh√¥ng c√≥ d·ªØ li·ªáu.
X√≥a t·∫•t c·∫£ c√°c h√†ng ƒëang hi·ªÉn th·ªã.
Trong tab "D·ªØ li·ªáu" trong Excel, nh·∫•n "X√≥a" ƒë·ªÉ xem c√°c h√†ng c√≤n l·∫°i.
X√≥a c·ªôt N (c·ªôt c√≥ t·ª´ "keep")
Nh·∫•p chu·ªôt ph·∫£i v√†o c·ªôt O ("RESULT_QUALIFIER") v√† nh·∫•p v√†o "insert" ƒë·ªÉ ch√®n m·ªôt c·ªôt tr·ªëng v√†o b√™n tr√°i c·ªôt O.
Nh·∫•p v√†o c·ªôt N (c·ªôt tham s·ªë), sau ƒë√≥ trong tab "D·ªØ li·ªáu" trong Excel, nh·∫•p v√†o "chuy·ªÉn ƒë·ªïi vƒÉn b·∫£n th√†nh c·ªôt".
ƒê·∫£m b·∫£o r·∫±ng t√πy ch·ªçn "delimited" ƒë∆∞·ª£c ch·ªçn r·ªìi nh·∫•p v√†o "Next".
Trong h·ªôp ti·∫øp theo, h√£y ƒë·∫£m b·∫£o ch·ªâ ch·ªçn "comma" (d·∫•u ph·∫©y) r·ªìi nh·∫•p v√†o "finish" (kh√¥ng ph·∫£i "next"). Thao t√°c n√†y s·∫Ω ƒë∆∞a t·∫•t c·∫£ d·ªØ li·ªáu sau d·∫•u ph·∫©y (v√≠ d·ª•: "dissolved", "total" ho·∫∑c "total recoverable") v√†o c·ªôt O v√† ch·ªâ ƒë·ªÉ l·∫°i t√™n tham s·ªë trong c·ªôt N.

G.
ƒê·∫£m b·∫£o t·∫•t c·∫£ c√°c m·∫´u trong Sheet1 ƒë·ªÅu ƒë∆∞·ª£c ƒë·ªãnh d·∫°ng "mg/L" ch·ª© kh√¥ng ph·∫£i "ug/L".
Trong Sheet1, s·∫Øp x·∫øp c·ªôt R (ƒê∆°n v·ªã) theo th·ª© t·ª± t·ª´ A ƒë·∫øn Z.
Trong menu th·∫£ xu·ªëng c·ªßa c·ªôt R, b·ªè ch·ªçn t·∫•t c·∫£ v√† ch·ªâ nh·∫•p v√†o ug/L (n·∫øu kh√¥ng c√≥ √¥ n√†o, h√£y b·ªè qua ph·∫ßn c√≤n l·∫°i c·ªßa b∆∞·ªõc n√†y).
Trong √¥ tr·ªëng ƒë·∫ßu ti√™n b√™n ph·∫£i c·ªôt Gi·ªõi h·∫°n B√°o c√°o (l√† C·ªôt T), h√£y vi·∫øt c√¥ng th·ª©c sau: =[√¥ ƒë·∫ßu ti√™n trong c·ªôt Q (K·∫øt qu·∫£)]/1000.
Khi con tr·ªè ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ n∆°i b·∫°n ƒë√£ vi·∫øt c√¥ng th·ª©c ƒë√≥ chuy·ªÉn th√†nh d·∫•u c·ªông m√†u ƒëen m·∫£nh, h√£y nh·∫•p v√† k√©o ba c·ªôt sang ph·∫£i (t·ª©c l√† s·∫Ω c√≥ b·ªën √¥ trong h√†ng ƒë√≥ c√≥ ch·ªØ vi·∫øt b√™n trong).
Sau ƒë√≥, v·ªõi c·∫£ b·ªën √¥ n√†y ƒë∆∞·ª£c t√¥ s√°ng, h√£y nh·∫•p v√†o d·∫•u c·ªông m√†u ƒëen m·∫£nh ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ cho ƒë·∫øn h·∫øt b√™n ph·∫£i ƒë·ªÉ ƒëi·ªÅn v√†o b·ªën c·ªôt n√†y cho c√°c √¥ c√≤n l·∫°i.
Kh√¥ng nh·∫•p, h√£y nh·∫•n CTRL+C ƒë·ªÉ sao ch√©p t·∫•t c·∫£ c√°c √¥ m·ªõi ƒë∆∞·ª£c ƒëi·ªÅn n√†y, sau ƒë√≥ nh·∫•p chu·ªôt ph·∫£i v√†o √¥ ƒë·∫ßu ti√™n hi·ªÉn th·ªã trong c·ªôt Q (√¥ ƒë∆∞·ª£c vi·∫øt trong (c√¥ng th·ª©c ·ªü tr√™n) v√† trong m·ª•c "t√πy ch·ªçn d√°n", h√£y nh·∫•n v√†o bi·ªÉu t∆∞·ª£ng c√≥ ch·ªØ "123" nh·ªè ·ªü g√≥c, bi·ªÉu t∆∞·ª£ng n√†y s·∫Ω ch·ªâ d√°n c√¢u tr·∫£ l·ªùi thay v√¨ c√¥ng th·ª©c.
Sau ƒë√≥, trong √¥ ƒë·∫ßu ti√™n hi·ªÉn th·ªã ·ªü c·ªôt R (ƒë∆°n v·ªã), h√£y nh·∫≠p "mg/L" v√† ƒëi·ªÅn v√†o c√°c h√†ng c√≤n l·∫°i b·∫±ng d·∫•u c·ªông m√†u ƒëen m·ªèng ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ ƒë√≥.
X√≥a c√°c c·ªôt U-X (c√°c c·ªôt b·ªï sung m√† b·∫°n ƒë√£ t·∫°o)
Trong tab "D·ªØ li·ªáu" trong Excel, h√£y nh·∫•n "X√≥a" ƒë·ªÉ quay l·∫°i t·∫•t c·∫£ d·ªØ li·ªáu.

H.
Th√™m th√¥ng tin c∆° s·ªü t·ª´ Sheet2 v√†o Sheet1
Trong Sheet2, x√≥a C·ªôt C sao cho c·ªôt ID ·ª©ng d·ª•ng n·∫±m ngay b√™n tr√°i c·ªôt t√™n c∆° s·ªü.
Sau khi th·ª±c hi·ªán thao t√°c n√†y, c√°c c·ªôt s·∫Ω tr√¥ng nh∆∞ sau: A ‚Äì WDID; B ‚Äì ID ·ª©ng d·ª•ng; C ‚Äì T√™n c∆° s·ªü; D ‚Äì T√™n ng∆∞·ªùi v·∫≠n h√†nh; E ‚Äì ƒê·ªãa ch·ªâ; F ‚Äì Th√†nh ph·ªë; G ‚Äì Ti·ªÉu bang; H ‚Äì M√£ b∆∞u ch√≠nh; I ‚Äì SIC ch√≠nh; J ‚Äì SIC ph·ª•; K ‚Äì SIC th·ª© ba.
Trong Sheet1, ch√®n 6 c·ªôt v√†o b√™n tr√°i c·ªôt C (NƒÉm b√°o c√°o).

Trong √¥ C2, h√£y nh·∫≠p c√¥ng th·ª©c sau v√† nh·∫•n enter: =VLOOKUP($B2,Sheet2!$B:$Z,COLUMN(B:B),FALSE)
Khi con tr·ªè ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ n∆°i b·∫°n ƒë√£ nh·∫≠p c√¥ng th·ª©c chuy·ªÉn th√†nh d·∫•u c·ªông m√†u ƒëen m·∫£nh, h√£y nh·∫•p v√† k√©o n√≥ ƒë·ªÉ ƒëi·ªÅn v√†o t·∫•t c·∫£ c√°c c·ªôt tr·ªëng b√™n ph·∫£i (t·ª©c l√† s·∫Ω c√≥ 6 √¥ trong h√†ng ƒë√≥ c√≥ ch·ªØ vi·∫øt).
Sau ƒë√≥, v·ªõi t·∫•t c·∫£ 6 √¥ n√†y ƒë∆∞·ª£c t√¥ s√°ng, h√£y nh·∫•p v√†o d·∫•u c·ªông m√†u ƒëen m·∫£nh ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ cho ƒë·∫øn h·∫øt b√™n ph·∫£i ƒë·ªÉ ƒëi·ªÅn v√†o 6 c·ªôt n√†y cho c√°c h√†ng c√≤n l·∫°i.
Kh√¥ng nh·∫•p, h√£y nh·∫•n CTRL+C ƒë·ªÉ sao ch√©p t·∫•t c·∫£ c√°c √¥ m·ªõi ƒë∆∞·ª£c ƒëi·ªÅn, sau ƒë√≥ nh·∫•p chu·ªôt ph·∫£i v√†o √¥ C2 (√¥ m√† b·∫°n ƒë√£ nh·∫≠p c√¥ng th·ª©c ·ªü tr√™n ban ƒë·∫ßu) v√† trong m·ª•c "t√πy ch·ªçn d√°n", h√£y nh·∫•p v√†o bi·ªÉu t∆∞·ª£ng c√≥ ch·ªØ "123" nh·ªè ·ªü g√≥c, bi·ªÉu t∆∞·ª£ng n√†y s·∫Ω ch·ªâ d√°n k·∫øt qu·∫£ thay v√¨ c√¥ng th·ª©c.

I.
Th√™m M√£ SIC t·ª´ Sheet2 v√†o Sheet1
Trong Sheet2, x√≥a c√°c c·ªôt C-H sao cho c·ªôt ID ·ª©ng d·ª•ng n·∫±m ngay b√™n tr√°i c·ªôt m√£ SIC ch√≠nh.
Sau khi th·ª±c hi·ªán thao t√°c n√†y, c√°c c·ªôt s·∫Ω tr√¥ng nh∆∞ sau: A ‚Äì WDID; B ‚Äì App ID; C ‚Äì SIC ch√≠nh; D ‚Äì SIC ph·ª•; E ‚Äì SIC b·∫≠c ba
Trong Sheet1, t·∫°i h√†ng ti√™u ƒë·ªÅ c·ªßa ba c·ªôt ngay b√™n ph·∫£i c·ªôt v·ª´a ƒëi·ªÅn cu·ªëi c√πng (c√≥ th·ªÉ l√† c√°c c·ªôt AA-AC), h√£y vi·∫øt l·∫ßn l∆∞·ª£t 1, 2 v√† 3.
Nh·∫•p v√†o H√†ng 1 (h√†ng ti√™u ƒë·ªÅ), chuy·ªÉn ƒë·∫øn tab "D·ªØ li·ªáu" trong Excel v√† nh·∫•p ƒë√∫p v√†o n√∫t "B·ªô l·ªçc". Thao t√°c n√†y s·∫Ω t·∫Øt v√† b·∫≠t l·∫°i c√°c b·ªô l·ªçc, bao g·ªìm c·∫£ 3 c·ªôt m·ªõi.
Trong √¥ AA2, h√£y nh·∫≠p c√¥ng th·ª©c sau v√† nh·∫•n enter: =VLOOKUP($B2,Sheet2!$B:$Z,COLUMN(B:B),FALSE)
Khi con tr·ªè ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ n∆°i b·∫°n ƒë√£ vi·∫øt c√¥ng th·ª©c ƒë√≥ chuy·ªÉn th√†nh d·∫•u c·ªông m√†u ƒëen m·∫£nh, h√£y nh·∫•p v√† k√©o n√≥ ƒë·ªÉ ƒëi·ªÅn v√†o t·∫•t c·∫£ c√°c c·ªôt tr·ªëng b√™n ph·∫£i (t·ª©c l√† s·∫Ω c√≥ 3 √¥ trong h√†ng ƒë√≥ c√≥ ch·ªØ vi·∫øt).
Sau ƒë√≥, v·ªõi c·∫£ 3 √¥ n√†y ƒë∆∞·ª£c t√¥ s√°ng, h√£y nh·∫•p v√†o d·∫•u c·ªông m√†u ƒëen m·∫£nh ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i c·ªßa √¥ cho ƒë·∫øn h·∫øt b√™n ph·∫£i ƒë·ªÉ ƒëi·ªÅn v√†o 3 c·ªôt n√†y cho ph·∫ßn c√≤n l·∫°i. h√†ng
Kh√¥ng c·∫ßn nh·∫•p, h√£y nh·∫•n CTRL+C ƒë·ªÉ sao ch√©p t·∫•t c·∫£ c√°c √¥ v·ª´a ƒëi·ªÅn, sau ƒë√≥ nh·∫•p chu·ªôt ph·∫£i v√†o √¥ AA2 (√¥ m√† b·∫°n ƒë√£ vi·∫øt c√¥ng th·ª©c tr√™n ban ƒë·∫ßu) v√† trong m·ª•c "t√πy ch·ªçn d√°n", h√£y nh·∫•p v√†o bi·ªÉu t∆∞·ª£ng c√≥ ch·ªØ "123" nh·ªè ·ªü g√≥c, bi·ªÉu t∆∞·ª£ng n√†y s·∫Ω ch·ªâ d√°n c√¢u tr·∫£ l·ªùi thay v√¨ c√¥ng th·ª©c.
Trong danh s√°ch th·∫£ xu·ªëng c·ªßa c·ªôt AC (ƒë∆∞·ª£c g·∫Øn nh√£n l√† "3" cho m√£ SIC b·∫≠c ba), h√£y ƒë·∫£m b·∫£o ch·ªâ ch·ªçn √¥ "0"
B√¥i ƒëen t·∫•t c·∫£ c√°c √¥ trong c·ªôt ƒë√≥, nh·∫•p chu·ªôt ph·∫£i v√† nh·∫•p v√†o "x√≥a n·ªôi dung".
Trong tab "D·ªØ li·ªáu" trong Excel, h√£y nh·∫•n "X√≥a" ƒë·ªÉ quay l·∫°i t·∫•t c·∫£ d·ªØ li·ªáu.
Trong danh s√°ch th·∫£ xu·ªëng c·ªßa c·ªôt AB (ƒë∆∞·ª£c g·∫Øn nh√£n l√† "2" cho m√£ SIC b·∫≠c hai), h√£y ƒë·∫£m b·∫£o ch·ªâ ch·ªçn √¥ "0"
B√¥i ƒëen t·∫•t c·∫£ c√°c √¥ trong c·ªôt ƒë√≥, nh·∫•p chu·ªôt ph·∫£i v√† nh·∫•p v√†o "x√≥a n·ªôi dung".
Trong tab "D·ªØ li·ªáu" trong Excel, h√£y nh·∫•n "X√≥a" ƒë·ªÉ quay l·∫°i t·∫•t c·∫£ d·ªØ li·ªáu.

J.
K·∫øt h·ª£p d·ªØ li·ªáu m·ªõi t·ª´ Sheet1 v√†o Data tracker hi·ªán c√≥
D·ªØ li·ªáu m·ªõi gi·ªù ƒë√£ s·∫µn s√†ng ƒë·ªÉ d√°n v√†o Data tracker ch√≠nh, nh∆∞ng tr∆∞·ªõc ti√™n b·∫°n c·∫ßn ƒë·∫£m b·∫£o kh√¥ng c√≤n b·∫•t k·ª≥ c√¥ng th·ª©c n√†o c√≥ th·ªÉ l√†m h·ªèng d·ªØ li·ªáu.
Trong tab "Trang ch·ªß" trong Excel, nh·∫•p v√†o "T√¨m & Ch·ªçn" v√† nh·∫•p v√†o "C√¥ng th·ª©c". N·∫øu th√¥ng b√°o kh√¥ng c√≥ c√¥ng th·ª©c n√†o, b·∫°n c√≥ th·ªÉ ti·∫øp t·ª•c. N·∫øu t√¨m th·∫•y c√¥ng th·ª©c, ch·ªâ c·∫ßn nh·∫•n CTRL+A ƒë·ªÉ ch·ªçn t·∫•t c·∫£, sau ƒë√≥ sao ch√©p (CTRL+C) v√† d√°n (CTRL+V) c√°c gi√° tr·ªã (c√≥ s·ªë "123" nh·ªè ·ªü g√≥c) ƒë·ªÉ x√≥a t·∫•t c·∫£ c√°c c√¥ng th·ª©c).

Trong Sheet ch√≠nh c√≥ t√™n "D·ªØ li·ªáu", h√£y chuy·ªÉn ƒë·∫øn c·ªôt "C≈©/M·ªõi" v√† nh·∫•p v√†o √¥ ·ªü h√†ng 2. ƒê·∫£m b·∫£o √¥ ƒë√≥ hi·ªÉn th·ªã "C≈©", sau ƒë√≥ d√πng con tr·ªè chu·ªôt c√≥ d·∫•u c·ªông m√†u ƒëen m·ªèng, nh·∫•p ƒë√∫p ƒë·ªÉ ƒëi·ªÅn v√†o c√°c h√†ng c√≤n l·∫°i.

B√¢y gi·ªù, quay l·∫°i Sheet1, sao ch√©p (CTRL+C) t·∫•t c·∫£ c√°c h√†ng (tr·ª´ h√†ng ti√™u ƒë·ªÅ) v√† d√°n (CTRL+V) ch√∫ng v√†o h√†ng m·ªü ƒë·∫ßu ti√™n ·ªü cu·ªëi trang D·ªØ li·ªáu.
B√¥i ƒëen v√† sao ch√©p (CTRL+C) c√°c √¥ ƒë√£ ƒëi·ªÅn ·ªü h√†ng cu·ªëi c√πng c·ªßa d·ªØ li·ªáu c≈© (h√†ng b·∫°n v·ª´a d√°n b√™n d∆∞·ªõi), sau ƒë√≥ di chuy·ªÉn xu·ªëng h√†ng cu·ªëi c√πng c·ªßa d·ªØ li·ªáu m·ªõi v√† nh·∫•p v√†o √¥ ·ªü c·ªôt ngo√†i c√πng b√™n ph·∫£i (c·ªôt m√£ SIC b·∫≠c ba) trong khi gi·ªØ ph√≠m SHIFT ƒë·ªÉ b√¥i ƒëen t·∫•t c·∫£ c√°c √¥ m·ªõi. Nh·∫•p chu·ªôt ph·∫£i v√† trong m·ª•c "t√πy ch·ªçn d√°n", nh·∫•n v√†o bi·ªÉu t∆∞·ª£ng c√≥ h√¨nh c·ªç v·∫Ω nh·ªè v√† d·∫•u ph·∫ßn trƒÉm, bi·ªÉu t∆∞·ª£ng n√†y s·∫Ω ch·ªâ d√°n ƒë·ªãnh d·∫°ng.
Sau ƒë√≥, trong c·ªôt "C≈©/M·ªõi", h√£y vi·∫øt "m·ªõi" v√†o h√†ng ƒë·∫ßu ti√™n c·ªßa d·ªØ li·ªáu m·ªõi v√† d√πng con tr·ªè c√≥ d·∫•u c·ªông m√†u ƒëen m·ªèng, nh·∫•p ƒë√∫p ƒë·ªÉ ƒëi·ªÅn v√†o c√°c h√†ng c√≤n l·∫°i.
B·∫°n c√≥ th·ªÉ c·∫ßn ƒë·ªãnh d·∫°ng l·∫°i ƒê∆∞·ªùng vi·ªÅn tr√™n c√°c √¥ sau khi t·∫£i d·ªØ li·ªáu m·ªõi l√™n ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·ªãnh d·∫°ng ph√π h·ª£p v·ªõi c√°c m·ª•c d·ªØ li·ªáu c≈© h∆°n v√† tr√¥ng ƒë·∫πp m·∫Øt h∆°n.
ƒê·ªÉ th·ª±c hi·ªán vi·ªác n√†y, h√£y nh·∫•p v√†o C·ªôt A, v√† trong khi gi·ªØ ph√≠m SHIFT, h√£y nh·∫•p v√†o C·ªôt AD (thao t√°c n√†y s·∫Ω l√†m n·ªïi b·∫≠t t·∫•t c·∫£ c√°c √¥ ƒë√£ ƒëi·ªÅn trong trang t√≠nh). Sau ƒë√≥, ·ªü ƒë·∫ßu trang t√≠nh, h√£y nh·∫•p v√†o tab "Trang ch·ªß" v√† ƒëi ƒë·∫øn h·ªôp √î g·∫ßn b√™n ph·∫£i, nh·∫•p v√†o menu th·∫£ xu·ªëng ƒê·ªãnh d·∫°ng, sau ƒë√≥ nh·∫•p v√†o t√πy ch·ªçn "ƒê·ªãnh d·∫°ng √î" ·ªü cu·ªëi.

Trong h·ªôp b·∫≠t l√™n, h√£y nh·∫•p v√†o tab ƒê∆∞·ªùng vi·ªÅn v√† b·∫°n s·∫Ω th·∫•y m·ªôt bi·ªÉu ƒë·ªì ·ªü ph√≠a b√™n ph·∫£i hi·ªÉn th·ªã b·ªën √¥ m·∫´u c√≥ ch·ªØ "VƒÉn b·∫£n" trong ƒë√≥. ·ªû b√™n tr√°i c·ªßa bi·ªÉu ƒë·ªì ƒë√≥, h√£y nh·∫•p v√†o c√°c bi·ªÉu t∆∞·ª£ng ƒë∆∞·ªùng vi·ªÅn Tr√™n, Gi·ªØa v√† D∆∞·ªõi. B√¢y gi·ªù, bi·ªÉu ƒë·ªì s·∫Ω hi·ªÉn th·ªã m·ªôt ƒë∆∞·ªùng li·ªÅn ·ªü tr√™n c√πng, gi·ªØa v√† d∆∞·ªõi c√πng c·ªßa c√°c √¥ m·∫´u. Sau ƒë√≥, nh·∫•p v√†o "Ok" ƒë·ªÉ x√°c nh·∫≠n nh·ªØng thay ƒë·ªïi n√†y.

Cu·ªëi c√πng, h√£y b·ªè ch·ªçn t·∫•t c·∫£ c√°c c·ªôt v√† b√¢y gi·ªù h√£y nh·∫•p v√†o C·ªôt AD ƒë·ªÉ ch·ªâ l√†m n·ªïi b·∫≠t c·ªôt ƒë√≥. ƒê√¢y s·∫Ω l√† c·ªôt ngo√†i c√πng b√™n ph·∫£i c√≥ vƒÉn b·∫£n (ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh l√† C≈©/M·ªõi). Sau khi c·ªôt ƒë√≥ ƒë∆∞·ª£c t√¥ s√°ng, h√£y chuy·ªÉn ƒë·∫øn tab "Trang ch·ªß" v√† t√¨m h·ªôp Ph√¥ng ch·ªØ ·ªü b√™n tr√°i, nh·∫•p v√†o menu th·∫£ xu·ªëng bi·ªÉu t∆∞·ª£ng ƒê∆∞·ªùng vi·ªÅn v√† ch·ªçn ƒê∆∞·ªùng vi·ªÅn ph·∫£i.
D·ªØ li·ªáu hi·ªán ƒë√£ s·∫µn s√†ng ƒë·ªÉ xem l·∫°i, v√¨ v·∫≠y h√£y x√≥a Sheet1 v√† Sheet2 v√† ƒë·∫£m b·∫£o l∆∞u.

'''


# Phan II phai lam cac viec sau:
#####################################################################################################################################################################################################################################################################
# B∆∞·ªõc                                                                    | Gi·∫£i th√≠ch                                                                                                                                                                              |
# ----------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
# **1. Create 2 new sheets**                                              | Trong file Excel ƒëang c√≥ (`SMARTS data tracker.xlsx`), t·∫°o 2 sheet m·ªõi b·∫±ng n√∫t `+`. B·∫°n c√≥ th·ªÉ ƒë·∫∑t t√™n l√† `Sheet1`, `Sheet2` ho·∫∑c t√™n c√≥ nghƒ©a h∆°n (v√≠ d·ª•: `NewData`, `FacilityInfo`). |
# **2. Get Sheet2 into the proper format**                                | Chu·∫©n h√≥a d·ªØ li·ªáu trong `Sheet2` ƒë·ªÉ ph√π h·ª£p v·ªõi ƒë·ªãnh d·∫°ng theo d√µi hi·ªán t·∫°i. C√≥ th·ªÉ bao g·ªìm: ƒë·ªïi t√™n c·ªôt, ƒë·ªãnh d·∫°ng ng√†y, x·ª≠ l√Ω tr·ªëng...                                                |
# **3. Get Sheet1 into the proper format**                                | L√†m t∆∞∆°ng t·ª± v·ªõi `Sheet1` ‚Äî chu·∫©n h√≥a d·ªØ li·ªáu m·∫´u, c√≥ th·ªÉ g·ªìm t√™n c·ªôt, ƒë∆°n v·ªã, ƒë·ªãnh d·∫°ng m√£ c∆° s·ªü, ng√†y l·∫•y m·∫´u...                                                                      |
# **4. Filter Sheet1 for only new sample data**                           | L·ªçc `Sheet1` ƒë·ªÉ ch·ªâ gi·ªØ l·∫°i d·ªØ li·ªáu m·ªõi (ch∆∞a c√≥ trong tracker). C√≥ th·ªÉ d√πng c·ªôt "Sample Date" ho·∫∑c "Entry Date" ƒë·ªÉ x√°c ƒë·ªãnh m·ªõi/c≈©.                                                    |
# **5. Check if facilities in Sheet1 are active**                         | Ki·ªÉm tra xem c√°c c∆° s·ªü trong `Sheet1` c√≤n ho·∫°t ƒë·ªông hay kh√¥ng (so v·ªõi danh s√°ch c∆° s·ªü ƒëang ho·∫°t ƒë·ªông). C√≥ th·ªÉ d·ª±a v√†o c·ªôt "Status" ho·∫∑c tra c·ª©u ch√©o t·ª´ `Sheet2`.                       |
# **6. Choose the parameters to track in Sheet1**                         | Ch·ªçn nh·ªØng th√¥ng s·ªë m√¥i tr∆∞·ªùng c·∫ßn theo d√µi (v√≠ d·ª•: pH, TSS, Oil & Grease...), kh√¥ng c·∫ßn gi·ªØ t·∫•t c·∫£.                                                                                    |
# **7. Make sure all the samples in Sheet1 are in ‚Äúmg/L‚Äù and not ‚Äúug/L‚Äù** | Chuy·ªÉn ƒë·ªïi ƒë∆°n v·ªã ƒëo: n·∫øu c√≥ d√≤ng n√†o ƒëang ·ªü "¬µg/L" (microgram), chuy·ªÉn v·ªÅ "mg/L" (milligram) cho ƒë·ªìng nh·∫•t. Th∆∞·ªùng chia gi√° tr·ªã cho 1,000.                                             |
# **8. Add facility information from Sheet2 into Sheet1**                 | D√πng `Sheet2` ƒë·ªÉ b·ªï sung th√¥ng tin c∆° s·ªü (t√™n, ƒë·ªãa ch·ªâ, v.v.) v√†o `Sheet1`. C√≥ th·ªÉ d√πng `VLOOKUP` ho·∫∑c `merge` theo `Facility ID`.                                                      |
# **9. Add in SIC Codes from Sheet2 into Sheet1**                         | Th√™m m√£ ng√†nh (SIC code) t·ª´ `Sheet2` v√†o `Sheet1`, c≈©ng theo `Facility ID`.                                                                                                             |
# **10. Combine new data from Sheet1 into existing Data tracker**         | G·ªôp (append) d·ªØ li·ªáu ƒë√£ x·ª≠ l√Ω trong `Sheet1` v√†o sheet `Data` g·ªëc trong tracker. ƒê·∫£m b·∫£o kh√¥ng th√™m tr√πng d√≤ng ƒë√£ c√≥ tr∆∞·ªõc ƒë√≥.                                                          |
#####################################################################################################################################################################################################################################################################

def Ht_Data_tquat(outputIo):
    st.write('Ht_Data_tquat')
    wb = load_workbook(outputIo)
    ws = wb.active
    # xu li wb, ws o day
    # roi save ra file excel de xem
    tepsave = "Data_0.xlsx"
    wb.save(tepsave)
    os.startfile(tepsave)
    return 

def Ht_Data_sxep(outputIo):
    st.write('Ht_Data_sxep')
    wb = load_workbook(outputIo)
    ws = wb.active
    # xu li wb, ws o day
    # roi save ra file excel de xem
    tepsave = "Data_1.xlsx"
    wb.save(tepsave)
    os.startfile(tepsave)
    return 

def Ht_Data_new(outputIo):
    st.write('Ht_Data_new')
    wb = load_workbook(outputIo)
    ws = wb.active
    # xu li wb, ws o day
    # roi save ra file excel de xem
    tepsave = "Data_2.xlsx"
    wb.save(tepsave)
    os.startfile(tepsave)
    return 

def Ht_Data_old(outputIo):
    st.write('Ht_Data_old')
    wb = load_workbook(outputIo)
    ws = wb.active
    # xu li wb, ws o day
    # roi save ra file excel de xem
    tepsave = "Data_3.xlsx"
    wb.save(tepsave)
    os.startfile(tepsave)
    return 

def Ht_Data_max(outputIo):
    st.write('Ht_Data_max')
    wb = load_workbook(outputIo)
    ws = wb.active
    # xu li wb, ws o day
    # roi save ra file excel de xem
    tepsave = "Data_0.xlsx"
    wb.save(tepsave)
    os.startfile(tepsave)
    return 




# Phan tich du lieu---------------------------------------
st.subheader('‚úÖ III. Analyze the new data', divider=True)
uploaded_file = st.file_uploader("T·∫£i l√™n file: Data_Tracker_New.xlsx", type=["xlsx"])

if uploaded_file:
    # Doc file da tai len de ghi du lieu o sheet Data vao df 
    df = pd.read_excel(uploaded_file, sheet_name="Data")

    # dung df ghi t·∫°m ra file Excel dat ten la output ƒë·ªÉ x·ª≠ l√Ω b·∫±ng openpyxl
    output = BytesIO()
    df.to_excel(output, index=False)
    output.seek(0)

    # lap menu cac ham xu li tep output 
    op_listCaiMuonXem = {
        "0). Xem t·ªïng qu√°t t·ªáp  Data_Tracker": Ht_Data_tquat, 
        "1). S·∫Øp x·∫øp theo 3 c·ªôt": Ht_Data_sxep,
        "2). C·ªôt OLD/NEW c√≥ gi√° tr·ªã new": Ht_Data_new,
        "3). C·ªôt OLD/NEW c√≥ gi√° tr·ªã old": Ht_Data_old,
        "4). So s√°nh gi√° tr·ªã max gi·ªØa c√°c c∆° s·ªü": Ht_Data_max 
    }
    # menu chon ham/viec
    viec_chon = st.selectbox(
        "Ch·ªçn h√†m x·ª≠ l√≠ Data v·ªõi ki·ªÉu hi·ªÉn th·ªã", 
        (op_listCaiMuonXem.keys()),
        index=None,
        placeholder="Chon hien thi...",
    )
    # chay ham da chon
    if viec_chon:
        # chay ham tuong ung voi key chon_with_viec, ham nay co ten la gia tri cua key do, 
        # them () de chay ham, tham so la file excel da tai len
        op_listCaiMuonXem[viec_chon](output)   # üëâ G·ªçi h√†m tuong ung



bien='''

def Ht_CaiMuonXem_0():
    
    #B1: tai len file Data_Tracker_New
    #uploaded_tracker = "Data_Tracker_New.xlsx"
    #df = pd.read_excel("Data_Tracker_New.xlsx", sheet_name='Data', dtype=str)

    uploaded_file = st.file_uploader('Upload Data_Tracker_New',type=['xlsx'])
    #B2: xu li file
    if uploaded_file is not None and "Data_Tracker_New" in uploaded_file.name :
        # 1.ƒê·ªçc file Excel th√†nh DataFrame
        df = pd.read_excel(uploaded_file, sheet_name='Data')
        # 2. S·∫Øp x·∫øp d·ªØ li·ªáu theo nhi·ªÅu c·∫•p ƒë·ªô (multi-level sort):
        df_sorted = df.sort_values(
            by=["OLD/NEW", "PARAMETER", "RESULT"],
            ascending=[True, True, False]
        )
        #Dua vao xlsx de xem kq sx
        tepxlsx = "Data_Tracker_3-1.xlsx"
        df_sorted.to_excel(tepxlsx, sheet_name='Datanew', index=False)
        os.startfile(tepxlsx)

    return    

    return "Ht_CaiMuonXem_0"

def Ht_CaiMuonXem_1():
    return "Ht_CaiMuonXem_1"

#----------------------



listCaiMuonXem = {
    "C·ªôt OLD/NEW c√≥ gi√° tr·ªã new": CaiMuonXem0,
    "C·ªôt OLD/NEW c√≥ gi√° tr·ªã old": CaiMuonXem1
}

chon_with_viec = st.multiselect("Chon cai ban muon xem", listCaiMuonXem.keys())
# chon_with_viec duoc tra ve la 1 key cua listCaiMuonXem
if chon_with_viec:
    # chay ham tuong ung voi key chon_with_viec, ham nay co ten la gia tri cua key do, them () de chay ham
    listCaiMuonXem[chon_with_viec]()   # üëâ G·ªçi h√†m tuong ung




# Trong tab "D·ªØ li·ªáu" trong Excel, h√£y t√¥ s√°ng to√†n b·ªô trang t√≠nh v√† nh·∫•n "S·∫Øp x·∫øp".
# Trong h·ªôp tho·∫°i hi·ªán ra, b·∫°n s·∫Ω mu·ªën s·∫Øp x·∫øp theo nhi·ªÅu c·∫•p ƒë·ªô nh∆∞ sau:
# S·∫Øp x·∫øp theo "OLD/NEW" t·ª´ A ƒë·∫øn Z
# Sau ƒë√≥ theo "Tham s·ªë" t·ª´ A ƒë·∫øn Z
# Sau ƒë√≥ theo "K·∫øt qu·∫£" t·ª´ l·ªõn nh·∫•t ƒë·∫øn nh·ªè nh·∫•t
# Sau khi nh·∫≠p ba h∆∞·ªõng n√†y, h√£y nh·∫•p v√†o "Ok" ƒë·ªÉ x√°c nh·∫≠n c√°c thay ƒë·ªïi.

Trong danh s√°ch th·∫£ xu·ªëng c·ªôt "C≈©/M·ªõi", ch·ªâ ch·ªçn "M·ªõi" ƒë·ªÉ xem k·∫øt qu·∫£ m·ªõi.
Tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu t√¥ s√°ng c√°c √¥, h√£y chuy·ªÉn ƒë·∫øn danh s√°ch th·∫£ xu·ªëng c·ªßa c·ªôt C (t√™n c∆° s·ªü) v√† ghi l·∫°i b·∫•t k·ª≥ c∆° s·ªü n√†o b·∫°n mu·ªën xem x√©t b·∫•t k·ªÉ m·∫´u m·ªõi c√≥ s·∫°ch hay kh√¥ng (v√≠ d·ª•: c√°c c∆° s·ªü b·∫°n ƒëang nh·∫Øm m·ª•c ti√™u ho·∫∑c ƒëang ki·ªán t·ª•ng, ho·∫∑c ƒëang trong ch∆∞∆°ng tr√¨nh tu√¢n th·ªß c·ªßa b·∫°n).
X√°c ƒë·ªãnh c√°c ƒëi·ªÉm v∆∞·ª£t qu√°
Tr∆∞·ªõc ti√™n, b·∫°n ph·∫£i t√¨m ra gi·ªõi h·∫°n x·∫£ th·∫£i √°p d·ª•ng cho c√°c c∆° s·ªü trong khu v·ª±c c·ªßa m√¨nh ƒë·ªÉ bi·∫øt ng∆∞·ª°ng n√†o c·∫ßn l√†m n·ªïi b·∫≠t c√°c ƒëi·ªÉm v∆∞·ª£t qu√° trong b·∫£ng D·ªØ li·ªáu.
IGP c√≥ c√°c M·ª©c H√†nh ƒë·ªông S·ªë (NAL) √°p d·ª•ng cho t·∫•t c·∫£ c√°c c∆° s·ªü, t√≠nh theo m·ª©c trung b√¨nh h√†ng nƒÉm ho·∫∑c m·ª©c t·ªëi ƒëa t·ª©c th·ªùi.
NAL trung b√¨nh h√†ng nƒÉm: Nh√¥m ‚Äì 0,75 mg/L; Amoniac ‚Äì 2,14 mg/L; Asen ‚Äì 0,15 mg/L; BOD ‚Äì 30 mg/L; Cadimi ‚Äì 0,0053 mg/L; COD ‚Äì 120 mg/L; ƒê·ªìng ‚Äì 0,0332 mg/L; Xyanua ‚Äì 0,022 mg/L; S·∫Øt ‚Äì 1,0 mg/L; Ch√¨ ‚Äì 0,262 mg/L; Magi√™ ‚Äì 0,064 mg/L; Th·ªßy ng√¢n ‚Äì 0,0014 mg/L; Niken ‚Äì 1,02 mg/L; N+N ‚Äì 0,68 mg/L; D·∫ßu v√† Kh√≠ ‚Äì 15 mg/L; Ph·ªët pho ‚Äì 2,0 mg/L; Selen ‚Äì 0,005 mg/L; B·∫°c ‚Äì 0,0183 mg/L; TSS ‚Äì 100 mg/L; K·∫Ωm ‚Äì 0,26 mg/L
N·ªìng ƒë·ªô t·ªëi ƒëa t·ª©c th·ªùi (NAL): D·∫ßu v√† N∆∞·ªõc ‚Äì 25 mg/L; pH ‚Äì nh·ªè h∆°n 6,0 ho·∫∑c l·ªõn h∆°n 9,0; TSS ‚Äì 400 mg/L
Sau ƒë√≥, b·∫°n s·∫Ω c·∫ßn tra c·ª©u c√°c M·ª©c H√†nh ƒë·ªông S·ªë (TNAL) v√†/ho·∫∑c Gi·ªõi h·∫°n N∆∞·ªõc th·∫£i S·ªë (NEL) li√™n quan ƒë·∫øn TMDL c·ª• th·ªÉ √°p d·ª•ng trong khu v·ª±c c·ªßa b·∫°n.
NAL th∆∞·ªùng ƒë∆∞·ª£c t√≠nh theo gi√° tr·ªã trung b√¨nh h√†ng nƒÉm ho·∫∑c gi√° tr·ªã t·ªëi ƒëa t·ª©c th·ªùi.
NEL th∆∞·ªùng ƒë∆∞·ª£c t√≠nh theo gi√° tr·ªã t·ªëi ƒëa t·ª©c th·ªùi, v·ªõi vi ph·∫°m ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a l√† hai ho·∫∑c nhi·ªÅu l·∫ßn v∆∞·ª£t qu√° t·∫°i c√πng m·ªôt ƒëi·ªÉm x·∫£ th·∫£i trong c√πng m·ªôt nƒÉm b√°o c√°o.
Sau ƒë√≥, d·ª±a tr√™n NAL/NEL/TNAL, v.v., h√£y xem x√©t v√† ƒë√°nh d·∫•u c√°c m·∫´u v∆∞·ª£t qu√° gi·ªõi h·∫°n t∆∞∆°ng ·ª©ng, ƒë·ªìng th·ªùi ghi l·∫°i t√™n c·ªßa b·∫•t k·ª≥ c∆° s·ªü n√†o b·∫°n mu·ªën xem x√©t th√™m trong qu√° tr√¨nh th·ª±c hi·ªán.
Khi ƒë√°nh d·∫•u c√°c m·∫´u v∆∞·ª£t qu√° gi·ªõi h·∫°n, h√£y ch·ªçn t·∫•t c·∫£ c√°c √¥ trong m·ªôt h√†ng, nh∆∞ng kh√¥ng ch·ªçn to√†n b·ªô h√†ng. Vi·ªác ƒë√°nh d·∫•u to√†n b·ªô h√†ng s·∫Ω l√†m cho to√†n b·ªô h√†ng (k·ªÉ c·∫£ c√°c √¥ ch∆∞a ƒëi·ªÅn ·ªü b√™n ph·∫£i c·ªôt cu·ªëi c√πng c√≥ vƒÉn b·∫£n, t·ª©c l√† C·ªôt AD) ƒë∆∞·ª£c ƒë√°nh d·∫•u, v√† ƒëi·ªÅu n√†y s·∫Ω tr√¥ng k·ª≥ l·∫° n·∫øu b·∫°n l·ªçc ho·∫∑c s·∫Øp x·∫øp l·∫°i c√°c √¥.
H√£y ƒë·∫£m b·∫£o vi·∫øt l·ªùi gi·∫£i th√≠ch cho t√†i li·ªáu tham kh·∫£o c·ªßa ri√™ng b·∫°n trong trang "Gi·∫£i th√≠ch" ƒë·ªÉ b·∫°n c√≥ th·ªÉ nh·ªõ l·∫°i c√°ch b·∫°n ƒë√£ l√†m (v√≠ d·ª•: ch√∫ng t√¥i ƒë√°nh d·∫•u t·∫•t c·∫£ c√°c c∆° s·ªü d·ª±a tr√™n NEL c·ªßa S√¥ng LA ƒë·ªÉ ƒë∆°n gi·∫£n h√≥a, m·∫∑c d√π NEL kh√¥ng √°p d·ª•ng cho m·ªçi c∆° s·ªü; ch√∫ng t√¥i s·ª≠ d·ª•ng NEL amoniac th·∫•p nh·∫•t trong s·ªë nhi·ªÅu NEL ƒë·ªÉ ƒë√°nh d·∫•u, v.v.)

Ng∆∞·ª°ng c·ªßa LAW ƒë·ªÉ ƒë√°nh d·∫•u c√°c tr∆∞·ªùng h·ª£p v∆∞·ª£t qu√° TNAL/NEL t·ª©c th·ªùi nh∆∞ sau: 
Amoniac ‚Äì 4,7 mg/L; 
Cadimi ‚Äì 0,0031 mg/L; 
ƒê·ªìng ‚Äì 0,06749 mg/L; 
E. coli ‚Äì 400/100 mL; 
Enterococci MPN ‚Äì 104/100 mL; 
Coliform ph√¢n ‚Äì 400/100 mL; 
Ch√¨ ‚Äì 0,094 mg/L; 
Nitrat ‚Äì 1,0 mg/L; 
Nitrit ‚Äì 1,0 mg/L; 
N+N ‚Äì 1,0 mg/L; 
T·ªïng Coliform ‚Äì 10000/100 mL; 
K·∫Ωm ‚Äì 0,159 mg/L
Sau khi ƒë√£ ƒë√°nh d·∫•u t·∫•t c·∫£ d·ªØ li·ªáu m·ªõi, trong tab "D·ªØ li·ªáu" c·ªßa Excel, h√£y nh·∫•n "X√≥a" ƒë·ªÉ quay l·∫°i t·∫•t c·∫£ d·ªØ li·ªáu.

Xem x√©t k·ªπ h∆°n m·ªôt c∆° s·ªü c·ª• th·ªÉ
B√¢y gi·ªù b·∫°n ƒë√£ c√≥ danh s√°ch c√°c c∆° s·ªü c·∫ßn xem x√©t, ƒë√¢y l√† c√°ch s·∫Øp x·∫øp Excel ƒë·ªÉ d·ªÖ d√†ng xem x√©t t·ª´ng c∆° s·ªü.

Trong tab "D·ªØ li·ªáu" c·ªßa Excel, h√£y nh·∫•n "S·∫Øp x·∫øp".

Trong h·ªôp tho·∫°i hi·ªán ra, b·∫°n s·∫Ω mu·ªën s·∫Øp x·∫øp theo nhi·ªÅu c·∫•p ƒë·ªô nh∆∞ sau:
S·∫Øp x·∫øp theo "WDID" t·ª´ A ƒë·∫øn Z
Sau ƒë√≥ theo "NƒÉm b√°o c√°o" t·ª´ nh·ªè ƒë·∫øn l·ªõn
Sau ƒë√≥ theo "Tham s·ªë" t·ª´ A ƒë·∫øn Z
Sau ƒë√≥ theo "K·∫øt qu·∫£" t·ª´ l·ªõn ƒë·∫øn nh·ªè

Gi·ªù ƒë√¢y, b·∫°n c√≥ th·ªÉ s·∫Øp x·∫øp theo c∆° s·ªü c·ª• th·ªÉ ƒë√≥ b·∫±ng c√°ch s·ª≠ d·ª•ng WDID, ID ·ª©ng d·ª•ng ho·∫∑c T√™n c∆° s·ªü c·ªßa h·ªç
Ki·ªÉm tra xem c∆° s·ªü n√†o n·∫±m trong b√°o c√°o th∆∞·ªùng ni√™n v·ªÅ vi·ªác l·∫•y m·∫´u t·∫•t c·∫£ c√°c QSE
T·∫£i xu·ªëng d·ªØ li·ªáu b√°o c√°o th∆∞·ªùng ni√™n t·ª´ SMARTS
V√†o SMARTS v√† nh·∫•p v√†o "Menu Ng∆∞·ªùi d√πng C√¥ng khai", sau ƒë√≥ nh·∫•p v√†o "T·∫£i xu·ªëng D·ªØ li·ªáu NOI Theo H·ªôi ƒë·ªìng Khu v·ª±c"
Ch·ªçn khu v·ª±c c·ªßa b·∫°n t·ª´ menu th·∫£ xu·ªëng, sau ƒë√≥ nh·∫•p v√†o "B√°o c√°o Th∆∞·ªùng ni√™n C√¥ng nghi·ªáp". D·ªØ li·ªáu s·∫Ω ƒë∆∞·ª£c t·∫£i xu·ªëng d∆∞·ªõi d·∫°ng t·ªáp .txt c√≥ t√™n l√† "t·ªáp".
T·∫°o m·ªôt trang t√≠nh m·ªõi trong tr√¨nh theo d√µi SMARTS c·ªßa b·∫°n, b√¢y gi·ªù c√≥ th·ªÉ ƒë∆∞·ª£c g·∫Øn nh√£n l√† Sheet3 (n·∫øu ch∆∞a ƒë∆∞·ª£c g·∫Øn nh√£n l√† Sheet3, b·∫°n n√™n ƒë·ªïi t√™n th√†nh Sheet3 cho m·ª•c ƒë√≠ch c·ªßa h∆∞·ªõng d·∫´n n√†y).
Sao ch√©p (CTRL+C) v√† d√°n (CTRL+V) to√†n b·ªô t·ªáp vƒÉn b·∫£n "B√°o c√°o th∆∞·ªùng ni√™n ng√†nh" v√†o √¥ ƒë·∫ßu ti√™n trong Sheet3 (A1).
Chuy·ªÉn Sheet3 sang ƒë·ªãnh d·∫°ng ph√π h·ª£p v·ªõi tr√¨nh theo d√µi c·ªßa b·∫°n.
ƒê·ªÉ s·∫Øp x·∫øp l·∫°i hai c·ªôt ƒë·∫ßu ti√™n, h√£y c·∫Øt (CTRL+X) C·ªôt B (WDID) v√† nh·∫•p v√†o C·ªôt A (ID ·ª©ng d·ª•ng), sau ƒë√≥ nh·∫•p chu·ªôt ph·∫£i v√† ch·ªçn "C·∫Øt √¥ ƒë√£ sao ch√©p".
X√≥a C·ªôt L (C√¢u tr·∫£ l·ªùi cho C√¢u h·ªèi 4) ƒë·∫øn C·ªôt AF (C√¢u tr·∫£ l·ªùi cho C√¢u h·ªèi TMDL). Sau ƒë√≥, x√≥a C·ªôt E (Khu v·ª±c) ƒë·∫øn C·ªôt I (Gi·∫£i th√≠ch cho C√¢u h·ªèi 2).
Sau khi th·ª±c hi·ªán thao t√°c n√†y, c√°c c·ªôt s·∫Ω tr√¥ng nh∆∞ sau: A ‚Äì WDID; B ‚Äì ID ·ª©ng d·ª•ng; C ‚Äì ID b√°o c√°o; D ‚Äì NƒÉm b√°o c√°o; E ‚Äì C√¢u tr·∫£ l·ªùi cho C√¢u h·ªèi 3; F ‚Äì Gi·∫£i th√≠ch cho C√¢u h·ªèi 3.
T√¥ s√°ng
'''
#-------------------------------------------------------


# Do thi hoa du lieu
st.subheader('‚úÖ IV. Visualize the data', divider=True)
ThucThiPhan_4()
